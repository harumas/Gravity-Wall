// <auto-generated>
// This code was generated by ShaderWrapperGenerator.
// </auto-generated>

using UnityEngine;
using System;

namespace PropertyGenerator.Generated
{
	[Serializable]
	public class PowerCubeLightShaderWrapper
	{
		[SerializeField] private Renderer renderer;
		private Material target;
		
		public PowerCubeLightShaderWrapper() { }
		
		public PowerCubeLightShaderWrapper(Material target)
		{
		   target = renderer.material;
		}
		
		private void CheckPersistentMaterial()
		{
		   if (target != null)
		   {
		       return;
		   }
		
		   target = renderer.material;
		}
		
		public float PowerOn
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(814);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(814, value);
			}
		}
		
		public float AfterLightIntensity
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(833);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(833, value);
			}
		}
		
		public Color AfterVolumetricLightColor
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetColor(834);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetColor(834, value);
			}
		}
		
		public float BeforeLightIntensity
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(835);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(835, value);
			}
		}
		
		public Color BeforeVolumetricLightColor
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetColor(836);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetColor(836, value);
			}
		}
		
		public Vector4 LightTiling
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetVector(837);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetVector(837, value);
			}
		}
		
		public float FresnelEdgeFalloff
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(755);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(755, value);
			}
		}
		
		public Vector4 ScrollSpeed
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetVector(815);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetVector(815, value);
			}
		}
		
		public Texture AlphaSideTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(838);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(838, value);
			}
		}
		
		public Texture MainAlphaTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(842);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(842, value);
			}
		}
		
		public float AlphaClip
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(399);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(399, value);
			}
		}
		
		public float CastShadows
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(826);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(826, value);
			}
		}
		
		public float Surface
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(397);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(397, value);
			}
		}
		
		public float Blend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(398);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(398, value);
			}
		}
		
		public float SrcBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(56);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(56, value);
			}
		}
		
		public float DstBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(57);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(57, value);
			}
		}
		
		public float ZWrite
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(263);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(263, value);
			}
		}
		
		public float ZWriteControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(827);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(827, value);
			}
		}
		
		public float ZTest
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(795);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(795, value);
			}
		}
		
		public float Cull
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(378);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(378, value);
			}
		}
		
		public float AlphaToMask
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(386);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(386, value);
			}
		}
		
		public float QueueOffset
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(402);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(402, value);
			}
		}
		
		public float QueueControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(479);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(479, value);
			}
		}
		
		public Texture unityLightmaps
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(403);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(403, value);
			}
		}
		
		public Texture unityLightmapsInd
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(407);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(407, value);
			}
		}
		
		public Texture unityShadowMasks
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(411);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(411, value);
			}
		}
	}
}