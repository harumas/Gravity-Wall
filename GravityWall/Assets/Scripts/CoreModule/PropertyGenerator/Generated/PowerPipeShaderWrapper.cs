// <auto-generated>
// This code was generated by ShaderWrapperGenerator.
// </auto-generated>

using UnityEngine;
using System;

namespace PropertyGenerator.Generated
{
	[Serializable]
	public class PowerPipeShaderWrapper
	{
		[SerializeField] private Renderer renderer;
		private Material target;
		
		public PowerPipeShaderWrapper() { }
		
		public PowerPipeShaderWrapper(Material target)
		{
		   target = renderer.material;
		}
		
		private void CheckPersistentMaterial()
		{
		   if (target != null)
		   {
		       return;
		   }
		
		   target = renderer.material;
		}
		
		public Texture MainColorTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(796);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(796, value);
			}
		}
		
		public Texture MetallicTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(800);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(800, value);
			}
		}
		
		public float MetallicIntensity
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(804);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(804, value);
			}
		}
		
		public float Roughness
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(456);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(456, value);
			}
		}
		
		public Texture SmoothnessTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(805);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(805, value);
			}
		}
		
		public float SmoothnessIntensity
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(809);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(809, value);
			}
		}
		
		public Texture NormalMapTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(810);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(810, value);
			}
		}
		
		public float NormalStrength
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(449);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(449, value);
			}
		}
		
		public float PowerOn
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(814);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(814, value);
			}
		}
		
		public Texture EmissionTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(817);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(817, value);
			}
		}
		
		public Color EmissionColor
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetColor(67);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetColor(67, value);
			}
		}
		
		public float EmissionIntensity
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(821);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(821, value);
			}
		}
		
		public float ScrollSpeed
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(815);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(815, value);
			}
		}
		
		public float ScrollDotNum
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(816);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(816, value);
			}
		}
		
		public Texture AOTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(464);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(464, value);
			}
		}
		
		public Texture SampleTexture2D894db321c00342f4b2733fc1191c03f7Texture1Texture2D
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(822);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(822, value);
			}
		}
		
		public float WorkflowMode
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(387);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(387, value);
			}
		}
		
		public float CastShadows
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(826);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(826, value);
			}
		}
		
		public float ReceiveShadows
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(401);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(401, value);
			}
		}
		
		public float Surface
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(397);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(397, value);
			}
		}
		
		public float Blend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(398);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(398, value);
			}
		}
		
		public float AlphaClip
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(399);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(399, value);
			}
		}
		
		public float BlendModePreserveSpecular
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(400);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(400, value);
			}
		}
		
		public float SrcBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(56);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(56, value);
			}
		}
		
		public float DstBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(57);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(57, value);
			}
		}
		
		public float ZWrite
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(263);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(263, value);
			}
		}
		
		public float ZWriteControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(827);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(827, value);
			}
		}
		
		public float ZTest
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(795);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(795, value);
			}
		}
		
		public float Cull
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(378);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(378, value);
			}
		}
		
		public float AlphaToMask
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(386);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(386, value);
			}
		}
		
		public float QueueOffset
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(402);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(402, value);
			}
		}
		
		public float QueueControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(479);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(479, value);
			}
		}
		
		public Texture unityLightmaps
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(403);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(403, value);
			}
		}
		
		public Texture unityLightmapsInd
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(407);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(407, value);
			}
		}
		
		public Texture unityShadowMasks
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(411);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(411, value);
			}
		}
	}
}