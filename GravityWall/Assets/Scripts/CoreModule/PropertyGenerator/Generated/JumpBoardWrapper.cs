// <auto-generated>
// This code was generated by ShaderWrapperGenerator.
// </auto-generated>

using UnityEngine;
using System;

namespace PropertyGenerator.Generated
{
	[Serializable]
	public class JumpBoardWrapper
	{
		[SerializeField] private Renderer renderer;
		private Material target;
		
		public JumpBoardWrapper() { }
		
		public JumpBoardWrapper(Material target)
		{
		   target = renderer.material;
		}
		
		private void CheckPersistentMaterial()
		{
		   if (target != null)
		   {
		       return;
		   }
		
		   target = renderer.material;
		}
		
		public Texture MainTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(769);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(769, value);
			}
		}
		
		public Color MainColor
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetColor(773);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetColor(773, value);
			}
		}
		
		public Color SubColor
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetColor(897);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetColor(897, value);
			}
		}
		
		public float Alpha
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(752);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(752, value);
			}
		}
		
		public Texture PushTexture
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(858);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(858, value);
			}
		}
		
		public float JumpOn
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(898);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(898, value);
			}
		}
		
		public float MinJump
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(899);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(899, value);
			}
		}
		
		public float MaxJump
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(900);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(900, value);
			}
		}
		
		public float UseCollisionRipple
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(901);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(901, value);
			}
		}
		
		public Vector4 RippleHitOrigin
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetVector(902);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetVector(902, value);
			}
		}
		
		public float RippleFull
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(903);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(903, value);
			}
		}
		
		public Texture NormalMap
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(207);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(207, value);
			}
		}
		
		public float WorkflowMode
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(387);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(387, value);
			}
		}
		
		public float CastShadows
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(826);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(826, value);
			}
		}
		
		public float ReceiveShadows
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(401);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(401, value);
			}
		}
		
		public float Surface
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(397);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(397, value);
			}
		}
		
		public float Blend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(398);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(398, value);
			}
		}
		
		public float AlphaClip
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(399);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(399, value);
			}
		}
		
		public float BlendModePreserveSpecular
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(400);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(400, value);
			}
		}
		
		public float SrcBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(56);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(56, value);
			}
		}
		
		public float DstBlend
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(57);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(57, value);
			}
		}
		
		public float ZWrite
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(263);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(263, value);
			}
		}
		
		public float ZWriteControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(827);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(827, value);
			}
		}
		
		public float ZTest
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(795);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(795, value);
			}
		}
		
		public float Cull
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(378);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(378, value);
			}
		}
		
		public float AlphaToMask
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(386);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(386, value);
			}
		}
		
		public float QueueOffset
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(402);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(402, value);
			}
		}
		
		public float QueueControl
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetFloat(479);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetFloat(479, value);
			}
		}
		
		public Texture unityLightmaps
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(403);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(403, value);
			}
		}
		
		public Texture unityLightmapsInd
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(407);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(407, value);
			}
		}
		
		public Texture unityShadowMasks
		{
			get
			{
			  CheckPersistentMaterial();
			  return target.GetTexture(411);
			}
			set
			{
			  CheckPersistentMaterial();
			  target.SetTexture(411, value);
			}
		}
	}
}