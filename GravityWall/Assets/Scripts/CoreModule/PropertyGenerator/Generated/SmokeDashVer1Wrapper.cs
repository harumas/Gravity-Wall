// <auto-generated>
// This code was generated by VisualEffectWrapperGenerator.
// </auto-generated>

using System;
using UnityEngine;
using UnityEngine.VFX;

namespace PropertyGenerator.Generated
{
	[Serializable]
	public class SmokeDashVer1Wrapper
	{
		[SerializeField] private VisualEffect target;
		public VisualEffect Effect => target;
		
		private static readonly int FresnelPowerProperty = Shader.PropertyToID("FresnelPower");
		private static readonly int InSmokeGradientProperty = Shader.PropertyToID("InSmokeGradient");
		private static readonly int IsLoopOnProperty = Shader.PropertyToID("IsLoopOn");
		private static readonly int LifeTimeProperty = Shader.PropertyToID("LifeTime");
		private static readonly int MainSmokeGradientProperty = Shader.PropertyToID("MainSmokeGradient");
		private static readonly int SmokeSizeProperty = Shader.PropertyToID("SmokeSize");
		private static readonly int SmokeSIzeAnimationCurveProperty = Shader.PropertyToID("SmokeSIzeAnimationCurve");
		private static readonly int SmokeVelocityProperty = Shader.PropertyToID("SmokeVelocity");
		private static readonly int SpawnRateProperty = Shader.PropertyToID("SpawnRate");
		private static readonly int VoronoiScaleProperty = Shader.PropertyToID("VoronoiScale");
		private static readonly int VoronoiSpeedProperty = Shader.PropertyToID("VoronoiSpeed");
		
		public System.Single FresnelPower
		{
			get => target.GetFloat(FresnelPowerProperty);
			set => target.SetFloat(FresnelPowerProperty, value);
		}
		
		public UnityEngine.Gradient InSmokeGradient
		{
			get => target.GetGradient(InSmokeGradientProperty);
			set => target.SetGradient(InSmokeGradientProperty, value);
		}
		
		public System.Boolean IsLoopOn
		{
			get => target.GetBool(IsLoopOnProperty);
			set => target.SetBool(IsLoopOnProperty, value);
		}
		
		public System.Single LifeTime
		{
			get => target.GetFloat(LifeTimeProperty);
			set => target.SetFloat(LifeTimeProperty, value);
		}
		
		public UnityEngine.Gradient MainSmokeGradient
		{
			get => target.GetGradient(MainSmokeGradientProperty);
			set => target.SetGradient(MainSmokeGradientProperty, value);
		}
		
		public System.Single SmokeSize
		{
			get => target.GetFloat(SmokeSizeProperty);
			set => target.SetFloat(SmokeSizeProperty, value);
		}
		
		public UnityEngine.AnimationCurve SmokeSIzeAnimationCurve
		{
			get => target.GetAnimationCurve(SmokeSIzeAnimationCurveProperty);
			set => target.SetAnimationCurve(SmokeSIzeAnimationCurveProperty, value);
		}
		
		public UnityEngine.Vector3 SmokeVelocity
		{
			get => target.GetVector3(SmokeVelocityProperty);
			set => target.SetVector3(SmokeVelocityProperty, value);
		}
		
		public System.Single SpawnRate
		{
			get => target.GetFloat(SpawnRateProperty);
			set => target.SetFloat(SpawnRateProperty, value);
		}
		
		public System.Single VoronoiScale
		{
			get => target.GetFloat(VoronoiScaleProperty);
			set => target.SetFloat(VoronoiScaleProperty, value);
		}
		
		public System.Single VoronoiSpeed
		{
			get => target.GetFloat(VoronoiSpeedProperty);
			set => target.SetFloat(VoronoiSpeedProperty, value);
		}
	}
}